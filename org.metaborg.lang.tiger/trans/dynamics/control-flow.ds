module control-flow

imports ds-signatures/Control-Flow-sig
imports dynamics/base
imports dynamics/store
imports dynamics/natives
imports dynamics/numbers

signature  
  arrows
    E |- evalSeq(List(Exp)) :: H --> V :: H
    
rules

  Seq(es) --> evalSeq(es).
  
  evalSeq([]) --> UnitV().  
  evalSeq([v]) --> v.  
  evalSeq([_ : V | es@[_|_]]) --> evalSeq(es).
      
  IfThen(IntV(i), e) --> v
  where
    case i of {
      1 => e --> v
      otherwise => UnitV() => v
    }.
  
  If(IntV(i), e1, e2) --> v
  where
    case i of {
      1 => 
        e1 --> v
      otherwise => 
        e2 --> v 
    }.
    
  // note: should be match for 0 for true and otherwise for false
    
  e@While(e1, e2) --> IfThen(e1, Seq([e2, e])). 
    
  For(Var(x), e1, e2, e3) -->
    Let([VarDec(x, NoTp(), e1),
         VarDec(end, NoTp(), e2)], 
        [While(Leq(Var(x), Var(end)), Seq([
           e3,
           Assign(Var(x), Plus(Var(x), Int("1")))
         ]))])
  where printI(fresh) : Id => end.  // capture?  
 

